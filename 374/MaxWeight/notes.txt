# def MaxWeight(A):
#     sum = np.zeros(A.shape)
#     for i in range(sum.shape[0]):
#         if i == 0:
#             sum[i] = A[i]
#         elif i == 1:
#             sum[i] = A[i] + A[i-1]
#         elif i == 2:
#             sum[i] = max(A[i] + A[i-1], sum[i-1])
#         elif i == 3:
#             sum[i] = max(A[i] + A[i-1] + np.sum(A[:i-2][::-2]), sum[i-1], A[i] + sum[i-2])
#         elif i >= 4:
#             sum[i] = max(A[i] + A[i-1] + np.sum(A[:i-3][::-2]), A[i] + A[i-1] + np.sum(A[:i-2][::-2]), sum[i-1], A[i] + sum[i-2])
#     return sum

# def SecondMethod(A):
#     n = A.shape[0]
#     max_index = 0
#     maximum = 0
#     for i in range(n-1):
#         if A[i] + A[i+1] > maximum:
#             maximum = A[i] + A[i+1]
#             max_index = i
#     sum = max(np.sum(A[max_index::-2]), (max_index > 2)*(np.sum(A[max_index-3::-2]) + A[max_index])) + np.sum(A[max_index+1::2])
#     return sum, max_index